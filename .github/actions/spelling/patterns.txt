# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

'Javascript'

# Automatically suggested patterns
# hit-count: 7079 file-count: 61
# base64 encoded content, possibly wrapped in mime
(?:^|[\s=;:?])[-a-zA-Z=;:/0-9+]{50,}(?:[\s=;:?]|$)

# hit-count: 1595 file-count: 296
# https/http/file urls
(?:\b(?:https?|ftp|file)://)[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]

# hit-count: 544 file-count: 5
# Punycode
\bxn--[-0-9a-z]+

# hit-count: 334 file-count: 51
# hex runs
\b[0-9a-fA-F]{16,}\b

# hit-count: 273 file-count: 13
# IServiceProvider / isAThing
\b(?:I|isA)(?=(?:[A-Z][a-z]{2,})+\b)

# hit-count: 143 file-count: 35
# in a version of check-spelling after @0.0.21 printf markers won't be automatically consumed
# printf markers
# alternate markers if you run into latex and friends
(?<!\\)\\[nrt](?=[a-z]{2,})(?=.*["'`])

# hit-count: 63 file-count: 16
# base64 encoded content
([`'"])[-a-zA-Z=;:/0-9+]+={2,}\g{-1}

# hit-count: 30 file-count: 16
# This does not cover multiline strings, if your repository has them,
# you'll want to remove the `(?=.*?")` suffix.
# The `(?=.*?")` suffix should limit the false positives rate
# printf
%(?:(?:[dcs])(?=[a-z]{2,}))(?=[_a-zA-Z]+\b)(?!%)(?=.*?['"])

# hit-count: 27 file-count: 8
# encoded-word
=\?[-a-zA-Z0-9"*%]+\?[BQ]\?[^?]{0,75}\?=

# hit-count: 26 file-count: 10
# URL escaped characters
\%[0-9A-F][A-F]

# hit-count: 25 file-count: 8
# uuid:
\b[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\b

# hit-count: 18 file-count: 9
# regex choice
\(\?:[^)]+\|[^)]+\)

# hit-count: 14 file-count: 3
# Compiler flags (Unix, Java/Scala)
# Use if you have things like `-Pdocker` and want to treat them as `docker`
(?:^|[\t ,>"'`=(:])-(?:(?:J-|)[DPWXY]|[Llf])(?=[A-Z]{2,}|[A-Z][a-z]|[a-z]{2,})

SUPPORT_W

# hit-count: 13 file-count: 7
# stackexchange -- https://stackexchange.com/feeds/sites
\b(?:askubuntu|serverfault|stack(?:exchange|overflow)|superuser).com/(?:questions/\w+/[-\w]+|a/)

# hit-count: 13 file-count: 5
# mailto urls
mailto:[-a-zA-Z=;:/?%&0-9+@.]{3,}

# hit-count: 13 file-count: 3
# Update Lorem based on your content (requires `ge` and `w` from https://github.com/jsoref/spelling; and `review` from https://github.com/check-spelling/check-spelling/wiki/Looking-for-items-locally )
# grep '^[^#].*lorem' .github/actions/spelling/patterns.txt|perl -pne 's/.*i..\?://;s/\).*//' |tr '|' "\n"|sort -f |xargs -n1 ge|perl -pne 's/^[^:]*://'|sort -u|w|sed -e 's/ .*//'|w|review -
# Warning, while `(?i)` is very neat and fancy, if you have some binary files that aren't proper unicode, you might run into:
## Operation "substitution (s///)" returns its argument for non-Unicode code point 0x1C19AE (the code point will vary).
## You could manually change `(?i)X...` to use `[Xx]...`
## or you could add the files to your `excludes` file (a version after 0.0.19 should identify the file path)
# Lorem
(?:\w|\s|[,.])*\b(?i)(?:amet|consectetur|cursus|dolor|eros|ipsum|lacus|libero|ligula|lorem|magna|neque|nulla|suscipit|tempus)\b(?:\w|\s|[,.])*

# hit-count: 13 file-count: 2
# Compiler flags (Windows / PowerShell)
# This is a subset of the more general compiler flags pattern.
# It avoids matching `-Path` to prevent it from being treated as `ath`
(?:^|[\t ,"'`=(])-(?:[DPL](?=[A-Z]{2,})|[WXYlf](?=[A-Z]{2,}|[A-Z][a-z]|[a-z]{2,}))

# hit-count: 12 file-count: 4
# Non-English
[a-zA-Z]*[ÀÁÂÃÄÅÆČÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæčçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź][a-zA-Z]{3}[a-zA-ZÀÁÂÃÄÅÆČÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæčçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź]*|[a-zA-Z]{3,}[ÀÁÂÃÄÅÆČÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæčçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź]|[ÀÁÂÃÄÅÆČÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæčçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź][a-zA-Z]{3,}

# hit-count: 12 file-count: 4
# Contributor
\[[^\]]+\]\(https://github\.com/[^/\s"]+/?\)

# hit-count: 10 file-count: 2
# cid urls
(['"])cid:.*?\g{-1}

# hit-count: 8 file-count: 4
# sha-... -- uses a fancy capture
(\\?['"]|&quot;)[0-9a-f]{40,}\g{-1}

# hit-count: 8 file-count: 2
# shields.io
\bshields\.io/[-\w/%?=&.:+;,]*

# hit-count: 7 file-count: 5
# perl regex test
[!=]~ (?:/.*/|m\{.*?\}|m<.*?>|m([|!/@#,;']).*?\g{-1})

# hit-count: 7 file-count: 2
# css url wrappings
\burl\([^)]*\)

# hit-count: 6 file-count: 6
# Google Groups
\bgroups\.google\.com(?:/[a-z]+/(?:#!|)[^/\s"]+)*

# hit-count: 6 file-count: 4
# lower URL escaped characters
\%[0-9a-f][a-f](?=[a-z]{2,})

# hit-count: 6 file-count: 1
# Amazon
\bamazon\.com/[-\w]+/(?:dp/[0-9A-Z]+|)

# hit-count: 5 file-count: 5
# microsoft
\b(?:https?://|)(?:(?:download\.visualstudio|docs|msdn2?|research)\.microsoft|blogs\.msdn)\.com/[-_a-zA-Z0-9()=./%]*

# hit-count: 4 file-count: 3
# While you could try to match `http://` and `https://` by using `s?` in `https?://`, sometimes there
# YouTube url
\b(?:(?:www\.|)youtube\.com|youtu.be)/(?:channel/|embed/|user/|playlist\?list=|watch\?v=|v/|)[-a-zA-Z0-9?&=_%]*

# hit-count: 4 file-count: 2
# IPv6
\b(?:[0-9a-fA-F]{0,4}:){3,7}[0-9a-fA-F]{0,4}\b

# hit-count: 3 file-count: 2
# appveyor api
\bci\.appveyor\.com/api/projects/status/[0-9a-z]+

# hit-count: 3 file-count: 2
# w3
\bw3\.org/[-0-9a-zA-Z/#.]+

# hit-count: 3 file-count: 1
# githubusercontent
/[-a-z0-9]+\.githubusercontent\.com/[-a-zA-Z0-9?&=_\/.]*

# hit-count: 2 file-count: 2
# gist github
\bgist\.github\.com/[^/\s"]+/[0-9a-f]+

# hit-count: 2 file-count: 2
# Python string prefix / binary prefix
# Note that there's a high false positive rate, remove the `?=` and search for the regex to see if the matches seem like reasonable strings
(?<!')\b(?:B|BR|Br|F|FR|Fr|R|RB|RF|Rb|Rf|U|UR|Ur|b|bR|br|f|fR|fr|r|rB|rF|rb|rf|u|uR|ur)'(?:[A-Z]{3,}|[A-Z][a-z]{2,}|[a-z]{3,})

# hit-count: 2 file-count: 1
# ibm
[a-z.]*ibm\.com/[-_#=:%!?~.\\/\d\w]*

# hit-count: 1 file-count: 1
# patch hunk comments
^\@\@ -\d+(?:,\d+|) \+\d+(?:,\d+|) \@\@ .*

# hit-count: 1 file-count: 1
# data url in parens
\(data:(?:[^) ][^)]*?|)(?:[A-Z]{3,}|[A-Z][a-z]{2,}|[a-z]{3,})[^)]*\)

# hit-count: 1 file-count: 1
# data url in quotes
([`'"])data:(?:[^ `'"].*?|)(?:[A-Z]{3,}|[A-Z][a-z]{2,}|[a-z]{3,}).*\g{-1}

# hit-count: 1 file-count: 1
# data url
data:[-a-zA-Z=;:/0-9+]*,\S*

# hit-count: 1 file-count: 1
# magnet urls
magnet:[?=:\w]+

# hit-count: 1 file-count: 1
# Google Storage
\b[-a-zA-Z0-9.]*\bstorage\d*\.googleapis\.com(?:/\S*|)

# hit-count: 1 file-count: 1
# Google Fonts
\bfonts\.(?:googleapis|gstatic)\.com/[-/?=:;+&0-9a-zA-Z]*

# hit-count: 1 file-count: 1
# bit.ly
\bbit\.ly/\w+

# hit-count: 1 file-count: 1
# circleci
\bcircleci\.com/gh(?:/[^/\s"]+){1,5}.[a-z]+\?[-0-9a-zA-Z=&]+

# hit-count: 1 file-count: 1
# sched
\b[a-z0-9]+\.sched\.com\b

# hit-count: 1 file-count: 1
# javascript match regex
\.match\(/[^/\s"]*/[gim]*\s*

# hit-count: 1 file-count: 1
# perl qr regex
(?<!\$)\bqr(?:\{.*?\}|<.*?>|\(.*?\)|([|!/@#,;']).*?\g{-1})

# hit-count: 1 file-count: 1
# Time Zones
\b(?:Africa|Atlantic|America|Antarctica|Asia|Australia|Europe|Indian|Pacific)(?:/\w+)+

# hit-count: 1 file-count: 1
# Compiler flags (linker)
,-B

# IPv6
\b(?:[0-9a-f]{0,4}:){5}[0-9a-f]{0,4}\b

# Questionably acceptable forms of `in to`
# Personally, I prefer `log into`, but people object
# https://www.tprteaching.com/log-into-log-in-to-login/
\b(?:[Ll]og|[Ss]ign) in to\b

\\u[0-9A-F]{4}

# hex digits including css/html color classes:
(?:[\\0][xX]|\\u|[uU]\+|#x?|\%23)[0-9a-fA-FgGrR_]{2,}(?:[uUlL]{0,3}|u\d+)\b

# password
<(password[^>]*)>[^<]*</\g{-1}>

# crypt
"\$2\$[^"]*"

ESMTPA id [0-9A-F]{12}
Message-ID: <[^>]*>
key = "\w+"

# version suffix <word>v#
[Vv]\d+(?:\b|(?=[a-zA-Z_]))

# Compiler flags
[\t "'`=(;]-[DfWl]

# to opt in
\bto opt in\b

, opt in

# Delete word
\^W(?=[A-Z])

# acceptable duplicates
\@param (?:\{[^}]*\} |)([a-z]+) \g{-1}\s
\s(Date|long|LONG|not|value|words) \g{-1}\s

# ls directory listings
[-bcdlpsw](?:[-r][-w][-Ssx]){3}\s+\d+\s+\S+\s+\S+\s+\d+\s+
# mount
\bmount\s+-t\s+(\w+)\s+\g{-1}\b
# C types and repeated CSS values
\s(center|div|inherit|long|LONG|none|normal|solid|thin|transparent|very)(?: \g{-1})+\s
# C struct
\bstruct\s+(\w+)\s+\g{-1}\b
# go templates
\s(\w+)\s+\g{-1}\s+\`(?:graphql|inject|json|yaml):
# doxygen / javadoc / .net
(?:[\\@](?:brief|groupname|t?param|return|retval)|(?:public|private)(?:\s+static|\s+readonly)*)\s+(\w+)\s+\g{-1}\s

# Commit message -- Signed-off-by and friends
^\s*(?:(?:Based-on-patch|Co-authored|Helped|Mentored|Reported|Reviewed|Signed-off)-by|Thanks-to): (?:[^<]*<[^>]*>|[^<]*)\s*$

# Autogenerated revert commit message
^This reverts commit [0-9a-f]{40}\.$

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b
